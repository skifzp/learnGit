--------------------------------------
Как обновлять Гит репозиторий обновленными данными из локальной версии : 
для примера, создал на локалке файл, сделал git add fileName. 
А что нужно дальше . чтобы этот файл попал в удаленный репозиторий?

git commit
git push

-------------------------------------

Взять все изменения с Удаленного репозитория

git fetch
git pull

----------------------------------------

Коммит всех файлов с комментрарием
!!! попадают в коммит только ОТСЛЕЖУЕМЫЕ файлы(для которых ранее был выполнен git add)
git commit -a -m "text of commit"
	или
git commit -am "text of commit"

--------------------------------------------

Смотрим отличия между которые появились от последнего Комита (текущие изменения)
git diff

---------------------------------------
Откатить комитт на один шаг

git reset HEAD~1
git reset HEAD~1 --hard

Ресет разберет коммит и оставит дифф. Хард еще и дифф потрет. :)
----------------------------------------

git push --force
!!! может перезетереть коммиты сделаные другими участниками

-------------------------------------------------------------------------------

Разрешение конфликта между Удаленной версией и Локальной версии файла

1. способ
	git merge --abort
		мы сказали гиту, что мы отклоняем слияние (конфликт остался, но сам конфликт исчерпан - мы отменили слияние)
		
2.  	2.1 git pull 
			происходит автосливание конфликтых версий
			
		2.2 открываем этот файл редактором и на свое усотрение редактируем его
		2.3 git add FileName
		2.4 git commit -a

-----------------------------------------------------------------------------------------------------
Как обновлять Гит репозиторий обновленными данными из локальной версии : 
для примера, создал на локалке файл, сделал git add fileName. 
А что нужно дальше . чтобы этот файл попал в удаленный репозиторий?

git commit
git push

-------------------------------------
Взять все изменения с Удаленного репозитория

git fetch
git pull

----------------------------------------
git checkout FileName
git checkout .   (всю директорию)

убирает изменения в файле до состояния последнего коммита

------------------------------------------
git stash
скрывает изменения, внесенные после последнего коммита

git stash pop
возвращает скрытые изменения

git stash clear
безвозвратно удаляет скрытые изменения

	